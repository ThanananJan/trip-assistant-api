// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripAssistant.Library.Model.DB;

#nullable disable

namespace TripAssistant.Api.Migrations.TripAssistant
{
    [DbContext(typeof(TripAssistantDbContext))]
    [Migration("20241118043955_initialCreateTrip")]
    partial class initialCreateTrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TripAssistant.Library.Model.DB.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DtmCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NamTrip")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTrip");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripDebtor", b =>
                {
                    b.Property<int>("IdTripTransaction")
                        .HasColumnType("int");

                    b.Property<int>("IdDebtor")
                        .HasColumnType("int");

                    b.Property<int?>("TripTransactionIdTripTransaction")
                        .HasColumnType("int");

                    b.HasKey("IdTripTransaction", "IdDebtor");

                    b.HasIndex("IdDebtor");

                    b.HasIndex("TripTransactionIdTripTransaction");

                    b.ToTable("TripDebtor");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripMember", b =>
                {
                    b.Property<int>("IdTripMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTripMember"));

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<string>("NamMember")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTripMember");

                    b.HasIndex("IdTrip");

                    b.ToTable("TripMember");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripTransaction", b =>
                {
                    b.Property<int>("IdTripTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTripTransaction"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("DscTransaction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DtmCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPayer")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdTripTransaction");

                    b.HasIndex("IdPayer");

                    b.ToTable("TripTransaction");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripUser", b =>
                {
                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("IdTrip", "IdUser");

                    b.ToTable("TripUser");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripDebtor", b =>
                {
                    b.HasOne("TripAssistant.Library.Model.DB.TripMember", "Debtor")
                        .WithMany()
                        .HasForeignKey("IdDebtor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripAssistant.Library.Model.DB.TripTransaction", null)
                        .WithMany("TripDebtors")
                        .HasForeignKey("TripTransactionIdTripTransaction");

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripMember", b =>
                {
                    b.HasOne("TripAssistant.Library.Model.DB.Trip", "Trip")
                        .WithMany("Members")
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripTransaction", b =>
                {
                    b.HasOne("TripAssistant.Library.Model.DB.TripMember", "Payer")
                        .WithMany()
                        .HasForeignKey("IdPayer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripUser", b =>
                {
                    b.HasOne("TripAssistant.Library.Model.DB.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.Trip", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("TripAssistant.Library.Model.DB.TripTransaction", b =>
                {
                    b.Navigation("TripDebtors");
                });
#pragma warning restore 612, 618
        }
    }
}
